---
title: The Best Programmers
created: '2008-03-26T12:39:11+00:00'
visible: true
categories:
- Needlessly Technical
content_type: html
content: ! "In Jeff Atwood's latest <a title=\"Revisiting The Facts and Fallacies
  Of Software Engineering\" href=\"http://www.codinghorror.com/blog/archives/001083.html\">post</a>,
  he covers some of the well-known things about software development. Here's the first
  five things he lays out:\n\n<blockquote>\n   1. The most important factor in software
  work is the quality of the programmers.\n   2. The best programmers are up to 28
  times better than the worst programmers.\n   3. Adding people to a late project
  makes it later.\n   4. The working environment has a profound impact on productivity
  and quality. \n</blockquote>\n\nSo, here's the one that caught my eye. <strong>The
  best programmers are up to 28 times better than the worst programmers.</strong>\n\nThat
  number just keeps getting bigger. <strong>28</strong>?  Why 28? Is there now well-established
  research for the number 28?  I could argue that the best programmers are infinitely
  better than the worst, if anything because there are some problems that bad programmers
  <em>just can't solve</em>, bless their retarded code-cut-and-pasting souls. \n\nIt's
  the 28 that baffles me, though. 28 times. This is a pretty damn exact number.  It
  also makes me feel bad- how much better than a bad programmer am I? Am I 5 times
  better than a bad programmer? 10 times?  At what measurable order of magnitude of
  coding performance better than this theoretical unter-programmer do I become a useful
  addition to a coding team?"
