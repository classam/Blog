---
title: Another Use For Hashtables
created: '2008-06-04T16:43:44+00:00'
visible: false
categories:
- Needlessly Technical
content_type: html
content: ! "So, today, I was dealing with a nasty problem, and I discovered another
  potential use for <a title=\"My last post about Hashtables\" href=\"http://www.curtis.lassam.net/?p=429\">
  Hashtables</a>.\n\nWhat I decided had to do was to populate a number of data-sets
  with long lists of data, and then query these sets again and again to determine
  if they contained a specific value. \n\nMy initial thought was a Binary Search Tree-
  you might be familiar with such a concept from the obligatory Data Structures class
  that you've taken at some point or another in University. \n\nI couldn't, however,
  find a Binary Search Tree in the .NET libraries. \n\nNow, this irritates me to no
  end- I believe that there are a number of things that programmers do all of the
  time- sorting, dealing with sets of data, the like- and that these operations should
  not have to be re-implemented every time.  \n\nA clever company will have a common
  library with all of this sort of thing in it, but a clever framework should, too.
  \n\nOn top of that, I tend to always trust that someone else's implementation of
  foo is more intelligent than my implementation of foo, and more standard, as well.
  \n\nI'm sure, however, that .NET has these things- it's huge, remember. I'm just
  not sure where to find them.\n\nI'm getting off-topic, though. \n\nI had a quick
  chat with the <a title=\"Yang Zhao\" href=\"http://yangman.ca/blog/\">internet</a>,
  again, and they suggested that I use a simple Hashtable for the process that I had
  just described.  \n\nYeah, I guess that would work fine, too. "
